[http.middlewares]
  [http.middlewares.auth-internal-forward.forwardAuth]
    address = "http://127.0.0.1:8088/auth/forward-auth"
    authResponseHeaders = ["x-auth-userinfo", "x-auth-data"]
  [http.middlewares.auth-internal-forward-redirect.forwardAuth]
    address = "http://127.0.0.1:8088/auth/forward-auth?redirect"
    authResponseHeaders = ["x-auth-userinfo", "x-auth-data"]
  [http.middlewares.auth-internal-cache.headers.customResponseHeaders]
    etag = ""
    last-modified = ""
    cache-control = "no-cache, no-store, must-revalidate"
  [http.middlewares.auth-cors.headers]
    accessControlAllowMethods = ["GET", "OPTIONS", "PUT"]
    accessControlAllowHeaders = ["authorization", "accept", "content-type"]
    accessControlAllowOriginList = "*"
    accessControlMaxAge = 3600
    addVaryHeader = true
  [http.middlewares.auth.chain]
    middlewares = [{{if .Env.AUTH_GATEKEEPER_CORS}} "auth-cors", {{end}} "auth-internal-forward", "auth-internal-cache"]
  [http.middlewares.auth-redirect.chain]
    middlewares = ["auth-internal-forward-redirect", "auth-internal-cache"]

[http.routers]
  [http.routers.auth-routes]
    rule = "Path(`/login`) || Path(`/logout`) || Path(`/auth/callback`) || Path(`/auth/refresh`) || Path(`/auth/login/json`)"
    service = "auth"
    priority = 9999
    {{if .Env.AUTH_GATEKEEPER_CORS}} middlewares = ["auth-cors"] {{end}}

[http.services]
  [http.services.auth.loadBalancer]
    [[http.services.auth.loadBalancer.servers]]
      url = "http://127.0.0.1:8088/"